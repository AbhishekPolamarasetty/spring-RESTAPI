package com.abhi.Airports.Service;

import org.springframework.stereotype.Service;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class AirportService {

    private final List<Airport> airports = new ArrayList<>();

    public List<Airport> getAllAirports() {
        return airports;
    }

    public Airport createAirport(Airport airport) {
        airports.add(airport);
        return airport;
    }

    public Airport getAirportById(String airportId) {
        Optional<Airport> optionalAirport = airports.stream()
                .filter(airport -> airport.getIATA_code().equals(airportId))
                .findFirst();
        return optionalAirport.orElse(null);
    }

    public Airport updateAirport(String airportId, Airport updatedAirport) {
        Optional<Airport> optionalAirport = airports.stream()
                .filter(airport -> airport.getIATA_code().equals(airportId))
                .findFirst();
        if (optionalAirport.isPresent()) {
            Airport existingAirport = optionalAirport.get();
            existingAirport.setAirport_name(updatedAirport.getAirport_name());
            existingAirport.setCity_name(updatedAirport.getCity_name());
            return existingAirport;
        }
        return null;
    }

    public void deleteAirport(String airportId) {
        airports.removeIf(airport -> airport.getIATA_code().equals(airportId));
    }
}
